# Daphnet Presocratics Extraction Scaffold Specification
# Source: ILIESI-CNR Daphnet Ancient Source Database
# Primary Target: Complete Diels-Kranz Presocratics Collection

project:
  name: "Daphnet Presocratics Complete Extraction"
  version: "1.0.0"
  description: "Systematic extraction of all Presocratic texts from ILIESI-CNR Daphnet database"
  author: "James"
  created: "2025-01-20"
  repository: "source-texts"
  
source:
  name: "ILIESI-CNR Daphnet Ancient Source"
  base_url: "http://ancientsource.daphnet.iliesi.cnr.it"
  documentation_url: "http://presocratics-documentation.ancientsource.daphnet.iliesi.cnr.it"
  type: "web_database"
  encoding: "UTF-8"
  language: "Ancient Greek"
  content_license: "Academic/Research Use"
  
collections:
  presocratics:
    name: "Presocratics (Diels-Kranz)"
    url_pattern: "/texts/Presocratics/{chapter}-{type},{number}"
    chapters: 90  # DK chapters 1-90
    types: ["A", "B", "C"]  # Testimonia, Fragments, Imitations
    estimated_items: 2500
    priority: 1
    
  socratics:
    name: "Socratis et Socraticorum Reliquiae"
    url_pattern: "/texts/Socratics/{reference}"
    priority: 2
    
  laertius:
    name: "Diogenes Laertius Lives"
    url_pattern: "/texts/Laertius/{reference}"
    priority: 3
    
  sextus:
    name: "Sextus Empiricus"
    url_pattern: "/texts/Sextus/{reference}"
    priority: 4

extraction:
  method: "systematic_crawl"
  content_types:
    - html: "primary"
    - rdf: "metadata"
  rate_limit:
    delay: 2.0  # seconds between requests
    max_concurrent: 1
    timeout: 30
  retry:
    max_attempts: 3
    backoff: "exponential"
    
output:
  formats:
    - json:
        filename: "daphnet_complete.json"
        structure: "hierarchical"
        include_metadata: true
    - csv:
        filename: "daphnet_fragments.csv"
        columns: ["dk_ref", "chapter", "type", "number", "philosopher", "greek_text", "url"]
    - xml:
        filename: "daphnet_tei.xml"
        standard: "TEI-P5"
    - txt:
        filename: "daphnet_corpus.txt"
        encoding: "UTF-8"
        
  storage:
    base_path: "./data/daphnet"
    progress_path: "./data/daphnet/progress"
    logs_path: "./data/daphnet/logs"
    
validation:
  completeness:
    min_coverage: 0.95  # 95% of expected DK references
    validate_greek: true
    check_duplicates: true
  quality:
    min_text_length: 10
    encoding_check: true
    metadata_required: ["dk_ref", "greek_text", "url"]

technical:
  dependencies:
    - requests: ">=2.31.0"
    - beautifulsoup4: ">=4.12.0"
    - lxml: ">=5.0.0"
    - pandas: ">=2.0.0"
    - aiohttp: ">=3.9.0"
  python_version: ">=3.11"
  type_checking: "pyright_strict"
